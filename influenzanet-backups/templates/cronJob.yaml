apiVersion: batch/v1
kind: CronJob
metadata:
  name: backup-mongodb
  namespace: {{ .Values.namespace }}
spec:
  schedule: "0 0 * * *"
  concurrencyPolicy: Forbid
  suspend: false
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        spec:
          volumes:
            - name: rclone-config-volume
              configMap:
                name: rclone-config
          affinity:
              podAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchLabels:
                      app: mongo
                  topologyKey: kubernetes.io/hostname
          restartPolicy: OnFailure
          containers:
          - name: backup-mongodb
            image: {{ .Values.backupImage }}
            env:
              - name: MONGODB_URI
                value: {{ .Values.mongodbUri }}
              - name: MONGODB_USER
                valueFrom:
                  secretKeyRef:
                    name: case-mongodb-atlas
                    key: username
              - name: MONGODB_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: case-mongodb-atlas
                    key: password
            command:
            - /bin/sh
            - -c
            {{ if .Values.backupScript -}}
            - |
{{ .Files.Get .Values.backupScript | indent 14 }}
            {{ else -}}
            - |
              date;
              df -B1 /data/backups;
              echo "Running scheduled mongodb backup";
              mkdir -p /data/backups;
              mongodump \
              --archive="/data/backups/dump_$(date +%Y%m%d_%H%M%S).gz" \
              --gzip \
              --uri="mongodb://$MONGODB_URI" \
              -u "$MONGODB_USER" \
              -p "$MONGODB_PASSWORD" 2>&1;
              if [ "$?" = "0" ]; then echo "DONE";else 1>&2 echo "FAILED";exit 1;fi
            {{ end -}}
            volumeMounts:
              - mountPath: "/config"
                name: rclone-config-volume